name: Build RAMSES

on:
  push:
    branches:
      - dev
      - stable
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
    build:
        name: "${{ matrix.test-type }} in ${{ matrix.ndim }}D"
        runs-on: ubuntu-latest
        strategy:
            matrix:
                test-type: [default, rt, mhd]
                ndim: [1, 2, 3]
                exclude:
                    - test-type: rt
                      ndim: 1
        steps:
        - name: Checkout repository
          uses: actions/checkout@v4
        - name: Install OpenMPI
          run: sudo apt-get install -y openmpi-bin libopenmpi-dev
        - name: Build
          run: bash tests/build.${{ matrix.test-type }}.sh ${{ matrix.ndim }}
    run:
        name: "Tests"
        runs-on: ubuntu-latest
        steps:
        - name: Checkout repository
          uses: actions/checkout@v4
        - name: Install OpenMPI and FFTW
          run: sudo apt-get install -y openmpi-bin libopenmpi-dev libfftw3-bin libfftw3-dev
        - name: Setup conda
          uses: s-weigand/setup-conda@v1
        - name: Install dependencies
          run: conda install -c conda-forge tectonic numpy matplotlib scipy
        - name: Run tests
          run: |
            cd tests
            bash run_test_suite.sh -p 2 -v
        - name: Upload artifacts
          uses: actions/upload-artifact@v4
          if: always()
          with:
            name: test-results
            path: |
              tests/test_results.pdf
              tests/test_suite.log
    
    docs:
      runs-on: ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-latest]
          python-version: ["3.12"]
      steps:
        - uses: actions/checkout@v4

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
            python-version: ${{ matrix.python-version }}

        - name: Install RTD requirements
          run: pip install -r doc/rtd_requirements.txt

        - name: Build pdf documentation
          run: sphinx-build -M simplepdf doc doc/_build

        - name: Build html documentation
          run: sphinx-build -M html doc doc/_build

        - name: Upload artifacts
          uses: actions/upload-artifact@v4
          with:
            name: docs
            path: doc/_build
